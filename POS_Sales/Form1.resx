<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAdgAAAHYAfpcpnIAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAGuklEQVR4Xt2bdag1RRiHr93dgd0JJia2YmAjdiKKLX7YLXYjio0Jttj+YXdjd2J3dz3PfveFYdlz
        7ok95+zeHzzcO7N7dmdmZ2feed/ZoYpoGtgWrodX4Cv4HT6ER+EEWAbGgVGlyeFg+BH+a4GnYXUYFVoO
        PoGo3PNwOKwK88PMsCRsBVfBDxDnXggTQm21OfwGVuZlWA9G0nRwBvwF/u4hmAJqJ9/lX8FKXAeTQjta
        Bb4Af38XjAe1kYPdZ2Dhr4FOBzVfjZ/A6xxmRl10CljoF2BiM7rQluC1bAjHi8prRoj3vqyR/H7wemdn
        qYprN7Cwj2WpcmRDek1nk8rbCLeBhT0wS5UjB0CNJq/rtFppvQMWdOksVZ5uBa+7U5aqsGLqK3vAOg+8
        rkZUZTU+/AMWdEozSlTMLCdmqQorjBfN3DJ1JXjdfbJUhfUcWNANs1R5egq87qZZqsI6DSzoRVmqHM0E
        vlp/w/RmVFkrgw3wDUxlRgk6FLzmA1mq4hoX4jU4yYwu5RP/HrzeZmbUQauBBf4T1jCjQ9mYt4PXehJq
        5Sm6GCz417CUGW1K6+8C8Bp6khaFWklPzoNgBX6B7aHVJ6gRdS/4Wwe+jaCWmgxuAisiT4CVabREnheO
        h5/B833314day6d+EMRAJq7t7wONG7u5dv6rEMfFEX8hGDXS16cZG4ulIvQj3Am1f+ojaRHYAvYFXV2u
        8NYB3eejSnb/2cb+25H0BttzaqdJ4AB4G+zaDoQzQDvS6PkStCV0rOplroW2ho8h/35bGU3aqaGZVoLw
        KuW5EWaBSsr1fzrlfQB7gi6sWMmJsUCdnMYB9wbf/zFwKbwP6XlHgQbQJfAHmP8dGF+slOaA18AC2mV9
        0hNASKvOnqEdEBVshFbfuaBNkMr0w+A5/4KNUwnNBT5tC/YuLAvN5Pk+dV3cV8PN4BM+Alw3OH40kmsD
        G9cG8H66yQYq3+cwYN6Ebkb8drQjROzQwXZgclCyEBo3/R6cdgbv7VpBG6Lv2g4sgINT2S7wVhWeYgfP
        Zq9OKfIGBiutbBrzN5Q9KLni9NWzHMeZ0SstDs7j3qgIw9+DclZsAJbBJbdR6VLk09aJ4XJWnQPeROeG
        I32K057HFgQ1N8w39t++6XGwDKUMiM7pb4AX/AhcuFw2nC66QZi7Tn9OUXpvnaZOhX71CqdVy/B6lupC
        Vv498GKOrv79HNzBNVIDOJ/718pHdOgs6EcjuPvEV8B72gM70pwQldeqs0vriDQd7AF5vQhx3Mq7xNX9
        FQ1oI/RDOlC83w5Zqk2lT17DxkCE0q+vX8+Apzu2iuJ9xgG8uU9gLzOGlTbCmWb0WK4tvNf5WapN3Q35
        yqdqpRtrpubl04jXYV0zeqgYB27JUm3KXZsdt14TaffHZqldzOihjEV6n0eyVJtyI1I8qUbd1V7gnGvM
        T5e1a/YjwUoWyfxY3trAMaX2ShGS814dKe2u+Q2Ns4It67E8msJug82/JveAxy1Q0WtVtlYE7+cA3rJW
        gCIv7WIQmhbeAvO/hZPBHuNi5A6I3xwNqS6HOCY2lFth3UTRrtxrcAw08yZ11AARuUnRR5/KLm++Nvfs
        ZuS0K8Tcv4QZw9KSjO0yKe4JbldRBj1MjdRRA8Ra3hFaOzrfwk574YpqtuK7AjwnvydgIvC6omPTczrZ
        PRa9af8sVayuGsAfF2lN8LgbnZsp9vE1u3mY07VqAF3THjeM1UwLg+d9mqWKVcsGcN3vcdf+RYZOyCiP
        5/mhQyNFA2ixzdMm4XkycFp0XKIMHTWA9vtaYFdO9+brzY1dX476RXJUD7f3sWYkWgC8rsS02GvaaoB0
        Ggt0XaeycczX1t8G0vnesNUN4HH3BKVhrOUh7IoUo8ROp73CTVotS1+7Ft2zw0SB0+nMCl8LUQF9BG5b
        cf0QcXyjumtDqnhvXU57bVeWBkJbWVcMRKeDBXYFp+8vle//IVD00dMzUBS3M9LjcSM5I8UKBq4xYGHt
        Ac3W04avNwZH492h2d4fnRTOHtEIDlSVVXhW84NYt7IRwtR2l0hlFVaant/0/Vc+9SITOJUzQZEj1HCX
        19VU9iOoykqT1y88LKwfJkQj2G2N+1kBu3NR6MsAiQaQvzXGF/aCS+Wo/H5mVF3O/+H8tBE2AT9pNR0U
        7dR+CdJzNHhcGfp/+AhrIxshv+7X6Rm7NYvM2DCmnH8jRiBWvvJb24tkI0SF/WrTvbphxvq1Rqzugogh
        uLPDPYAGTzSanCVqLZeyofhaoxkxCDoGpJsjRoUMfRt+KjJt3fToAqfCGhr6H3uTdXO6zGjsAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>