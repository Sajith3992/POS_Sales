<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>